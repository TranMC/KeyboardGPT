name: Build & Release APK

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Get version from build.gradle
        id: version
        run: |
          VERSION=$(grep "versionName" app/build.gradle | sed -E 's/.*"([^"]+)".*/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build with Gradle
        run: ./gradlew assembleRelease

      - name: List APK files
        run: |
          ls -la app/build/outputs/apk/release/

      - name: Rename APK
        run: |
          mv app/build/outputs/apk/release/*.apk app/build/outputs/apk/release/KeyboardGPT.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: KeyboardGPT-apk
          path: app/build/outputs/apk/release/KeyboardGPT.apk

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: KeyboardGPT-apk

      - name: Generate changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-file: './app/build.gradle'
          skip-version-file: true
          skip-commit: true
          output-file: 'CHANGELOG.md'
          release-count: 0
          tag-prefix: 'v'

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: KeyboardGPT.apk
          body_path: CHANGELOG.md
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Tag
        if: github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/')
        run: |
          VERSION=${{ steps.version.outputs.version }}
          git tag "v$VERSION"
          git push origin "v$VERSION" 